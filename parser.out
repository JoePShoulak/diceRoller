Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> sum
Rule 1     sum -> mult PLUS mult
Rule 2     sum -> mult
Rule 3     mult -> NUMBER TIMES value
Rule 4     mult -> value
Rule 5     value -> NUMBER DIE NUMBER
Rule 6     value -> DIE NUMBER
Rule 7     value -> NUMBER
Rule 8     value -> IDENT LPAREN list RPAREN
Rule 9     value -> LPAREN sum RPAREN
Rule 10    list -> sum COMMA sum
Rule 11    list -> list COMMA sum

Terminals, with rules where they appear

COMMA                : 10 11
DIE                  : 5 6
IDENT                : 8
LPAREN               : 8 9
NUMBER               : 3 5 5 6 7
PLUS                 : 1
RPAREN               : 8 9
TIMES                : 3
error                : 

Nonterminals, with rules where they appear

list                 : 8 11
mult                 : 1 1 2
sum                  : 9 10 10 11 0
value                : 3 4

Parsing method: LALR

state 0

    (0) S' -> . sum
    (1) sum -> . mult PLUS mult
    (2) sum -> . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    sum                            shift and go to state 1
    mult                           shift and go to state 2
    value                          shift and go to state 4

state 1

    (0) S' -> sum .



state 2

    (1) sum -> mult . PLUS mult
    (2) sum -> mult .

    PLUS            shift and go to state 8
    $end            reduce using rule 2 (sum -> mult .)
    RPAREN          reduce using rule 2 (sum -> mult .)
    COMMA           reduce using rule 2 (sum -> mult .)


state 3

    (3) mult -> NUMBER . TIMES value
    (5) value -> NUMBER . DIE NUMBER
    (7) value -> NUMBER .

    TIMES           shift and go to state 9
    DIE             shift and go to state 10
    PLUS            reduce using rule 7 (value -> NUMBER .)
    $end            reduce using rule 7 (value -> NUMBER .)
    RPAREN          reduce using rule 7 (value -> NUMBER .)
    COMMA           reduce using rule 7 (value -> NUMBER .)


state 4

    (4) mult -> value .

    PLUS            reduce using rule 4 (mult -> value .)
    $end            reduce using rule 4 (mult -> value .)
    RPAREN          reduce using rule 4 (mult -> value .)
    COMMA           reduce using rule 4 (mult -> value .)


state 5

    (6) value -> DIE . NUMBER

    NUMBER          shift and go to state 11


state 6

    (8) value -> IDENT . LPAREN list RPAREN

    LPAREN          shift and go to state 12


state 7

    (9) value -> LPAREN . sum RPAREN
    (1) sum -> . mult PLUS mult
    (2) sum -> . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    sum                            shift and go to state 13
    mult                           shift and go to state 2
    value                          shift and go to state 4

state 8

    (1) sum -> mult PLUS . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    mult                           shift and go to state 14
    value                          shift and go to state 4

state 9

    (3) mult -> NUMBER TIMES . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 15
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    value                          shift and go to state 16

state 10

    (5) value -> NUMBER DIE . NUMBER

    NUMBER          shift and go to state 17


state 11

    (6) value -> DIE NUMBER .

    PLUS            reduce using rule 6 (value -> DIE NUMBER .)
    $end            reduce using rule 6 (value -> DIE NUMBER .)
    RPAREN          reduce using rule 6 (value -> DIE NUMBER .)
    COMMA           reduce using rule 6 (value -> DIE NUMBER .)


state 12

    (8) value -> IDENT LPAREN . list RPAREN
    (10) list -> . sum COMMA sum
    (11) list -> . list COMMA sum
    (1) sum -> . mult PLUS mult
    (2) sum -> . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    list                           shift and go to state 18
    sum                            shift and go to state 19
    mult                           shift and go to state 2
    value                          shift and go to state 4

state 13

    (9) value -> LPAREN sum . RPAREN

    RPAREN          shift and go to state 20


state 14

    (1) sum -> mult PLUS mult .

    $end            reduce using rule 1 (sum -> mult PLUS mult .)
    RPAREN          reduce using rule 1 (sum -> mult PLUS mult .)
    COMMA           reduce using rule 1 (sum -> mult PLUS mult .)


state 15

    (5) value -> NUMBER . DIE NUMBER
    (7) value -> NUMBER .

    DIE             shift and go to state 10
    PLUS            reduce using rule 7 (value -> NUMBER .)
    $end            reduce using rule 7 (value -> NUMBER .)
    RPAREN          reduce using rule 7 (value -> NUMBER .)
    COMMA           reduce using rule 7 (value -> NUMBER .)


state 16

    (3) mult -> NUMBER TIMES value .

    PLUS            reduce using rule 3 (mult -> NUMBER TIMES value .)
    $end            reduce using rule 3 (mult -> NUMBER TIMES value .)
    RPAREN          reduce using rule 3 (mult -> NUMBER TIMES value .)
    COMMA           reduce using rule 3 (mult -> NUMBER TIMES value .)


state 17

    (5) value -> NUMBER DIE NUMBER .

    PLUS            reduce using rule 5 (value -> NUMBER DIE NUMBER .)
    $end            reduce using rule 5 (value -> NUMBER DIE NUMBER .)
    RPAREN          reduce using rule 5 (value -> NUMBER DIE NUMBER .)
    COMMA           reduce using rule 5 (value -> NUMBER DIE NUMBER .)


state 18

    (8) value -> IDENT LPAREN list . RPAREN
    (11) list -> list . COMMA sum

    RPAREN          shift and go to state 21
    COMMA           shift and go to state 22


state 19

    (10) list -> sum . COMMA sum

    COMMA           shift and go to state 23


state 20

    (9) value -> LPAREN sum RPAREN .

    PLUS            reduce using rule 9 (value -> LPAREN sum RPAREN .)
    $end            reduce using rule 9 (value -> LPAREN sum RPAREN .)
    RPAREN          reduce using rule 9 (value -> LPAREN sum RPAREN .)
    COMMA           reduce using rule 9 (value -> LPAREN sum RPAREN .)


state 21

    (8) value -> IDENT LPAREN list RPAREN .

    PLUS            reduce using rule 8 (value -> IDENT LPAREN list RPAREN .)
    $end            reduce using rule 8 (value -> IDENT LPAREN list RPAREN .)
    RPAREN          reduce using rule 8 (value -> IDENT LPAREN list RPAREN .)
    COMMA           reduce using rule 8 (value -> IDENT LPAREN list RPAREN .)


state 22

    (11) list -> list COMMA . sum
    (1) sum -> . mult PLUS mult
    (2) sum -> . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    sum                            shift and go to state 24
    mult                           shift and go to state 2
    value                          shift and go to state 4

state 23

    (10) list -> sum COMMA . sum
    (1) sum -> . mult PLUS mult
    (2) sum -> . mult
    (3) mult -> . NUMBER TIMES value
    (4) mult -> . value
    (5) value -> . NUMBER DIE NUMBER
    (6) value -> . DIE NUMBER
    (7) value -> . NUMBER
    (8) value -> . IDENT LPAREN list RPAREN
    (9) value -> . LPAREN sum RPAREN

    NUMBER          shift and go to state 3
    DIE             shift and go to state 5
    IDENT           shift and go to state 6
    LPAREN          shift and go to state 7

    sum                            shift and go to state 25
    mult                           shift and go to state 2
    value                          shift and go to state 4

state 24

    (11) list -> list COMMA sum .

    RPAREN          reduce using rule 11 (list -> list COMMA sum .)
    COMMA           reduce using rule 11 (list -> list COMMA sum .)


state 25

    (10) list -> sum COMMA sum .

    RPAREN          reduce using rule 10 (list -> sum COMMA sum .)
    COMMA           reduce using rule 10 (list -> sum COMMA sum .)

